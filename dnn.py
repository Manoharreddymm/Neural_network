# -*- coding: utf-8 -*-
"""DNN.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1zCAlnl13BZvFMVv1JW4Z2NbqEfdGCe2e
"""

import tensorflow as tf
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense,Flatten
from tensorflow.keras.utils import to_categorical
from tensorflow.keras.datasets import mnist

(x_train,y_train),(x_test,y_test)=mnist.load_data()

#normalizing
x_train=x_train/255.0
x_test=x_test/255.0

y_train

import numpy as np
a=np.unique(y_train)
print(a)

x_train.shape

model=Sequential([
    Flatten(input_shape=(28,28)),
    Dense(128,activation='relu'),
    Dense(64,activation='relu'),
    Dense(32,activation='relu'),
    Dense(16,activation='relu'),
    Dense(10,activation='softmax')
])

model.compile(optimizer='adam',loss='sparse_categorical_crossentropy',metrics=['accuracy'])

model.fit(x_train,y_train,epochs=15,batch_size=109)

y_pred=model.predict(x_test)
y_pred

import numpy as np
y_pred_classes = np.argmax(y_pred, axis=1)
y_pred_classes.size

y_test.size

loss, accuracy = model.evaluate(x_test, y_test)
print(f"Test Loss: {loss:.4f}, Test Accuracy: {accuracy:.4f}")

from sklearn.metrics import confusion_matrix
cm=confusion_matrix(y_test,y_pred_classes)
cm



